name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      # Step 3: Install dependencies with pre-built binaries
      - name: Install dependencies with pre-built binaries
        env:
          CRYPTOGRAPHY_DONT_BUILD_RUST: 1
        run: |
          python -m pip install --upgrade pip
          pip install --prefer-binary -r requirements.txt

      # Step 4: Run tests
      - name: Run tests
        run: |
          python -m unittest discover -s customer_order_app

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code again
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Heroku CLI
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      # Step 3: Authenticate with Heroku
      - name: Authenticate with Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo $HEROKU_API_KEY | heroku auth:token > ~/.netrc

      # Step 4: Push code to Heroku using Heroku CLI
      - name: Deploy to Heroku via Heroku CLI
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "Deploying using Heroku CLI..."
          heroku git:remote -a customer-order-app
          git push heroku main

      # Step 5: Clean up old releases (optional)
      - name: Clean up releases (optional)
        run: |
          heroku releases:clean --app customer-order-app
